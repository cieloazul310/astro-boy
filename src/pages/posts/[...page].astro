---
/* eslint-disable-next-line import/no-unresolved */
import { getCollection } from "astro:content";
import type { InferGetStaticPropsType, GetStaticPathsOptions } from "astro";
import {
  SarkaraLayout,
  ArticleList,
  Pagination,
} from "@cieloazul310/astro-sarkara";
import ListItem from "../../components/posts/ListItem.astro";
import PostYears from "../../components/posts/PostYears.astro";
import { pageSize, menu, siteMetadata } from "../../data";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  // Load your data with fetch(), Astro.glob(), etc.
  const allPosts = await getCollection("posts");
  const posts = allPosts.sort(
    (a, b) =>
      new Date(b.data.date ?? 0).getTime() -
      new Date(a.data.date ?? 0).getTime(),
  );

  // Return a paginated collection of paths for all posts
  return paginate(posts, { pageSize });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props;
---

<SarkaraLayout menu={menu} siteMetadata={siteMetadata} title="Markdown Posts">
  <Fragment slot="jumbotron-footer">
    {page.currentPage !== 1 && `(${page.currentPage}/${page.lastPage})`}
  </Fragment>
  <ArticleList>
    {page.data.map((post) => <ListItem post={post} />)}
  </ArticleList>
  <Pagination page={page} basePath="/posts" />
  <PostYears slot="sidebar-top" />
  <PostYears slot="drawer-top" />
</SarkaraLayout>
