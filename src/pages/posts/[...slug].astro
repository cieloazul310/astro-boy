---
/* eslint-disable-next-line import/no-unresolved */
import { getCollection, getEntry } from "astro:content";
import type { InferGetStaticPropsType } from "astro";
import {
  SarkaraLayout,
  Paper,
  PaperLink,
  Navigation,
  useNavigation,
} from "@cieloazul310/astro-sarkara";
import { hstack } from "@cieloazul310/sarkara-css/patterns";
import { css } from "@cieloazul310/sarkara-css/css";
import PostYears from "../../components/posts/PostYears.astro";
import { parseDate } from "../../utils";
import { menu, siteMetadata } from "../../data";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");

  return allPosts
    .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
    .map((post, index, arr) => {
      const newer = index !== 0 ? arr[index - 1] : null;
      const older = index !== arr.length - 1 ? arr[index + 1] : null;

      return {
        params: {
          slug: post.slug,
        },
        props: {
          post,
          newer,
          older,
        },
      };
    });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post, newer, older } = Astro.props;
const navigation = useNavigation(
  { left: newer, right: older },
  {
    href: (obj) => `/posts/${obj.slug}`,
    primaryText: (obj) => obj.data.title,
    secondaryText: (obj) => parseDate(obj.data.date),
  },
);
const entry = await getEntry("posts", post.slug);
const { Content, remarkPluginFrontmatter } = await entry.render();
const description = remarkPluginFrontmatter.excerpt;
---

<SarkaraLayout
  menu={menu}
  siteMetadata={siteMetadata}
  title={post.data.title}
  description={description}
  image={post.data.featuredImg?.src}
>
  <Fragment slot="jumbotron-footer">
    <time datetime={post.data.date.toISOString()}
      >{parseDate(post.data.date)}</time
    >
    {post.data.author && <span>by {post.data.author}</span>}
  </Fragment>
  <Paper>
    <Content />
  </Paper>
  <Paper>
    <footer>
      <h2 class={css({ textStyle: "headings", fontSize: ["lg", "lg", "xl"] })}>
        {post.data.title}
      </h2>
      <p class={hstack({ gap: 2 })}>
        <time datetime={post.data.date.toISOString()}
          >{parseDate(post.data.date)}</time
        >
        {post.data.author && <span>by {post.data.author}</span>}
      </p>
    </footer>
  </Paper>
  <Navigation {...navigation} />
  <PaperLink href="/posts/">Markdown Posts Top</PaperLink>
  <Fragment slot="sidebar-top">
    <Navigation {...navigation} direction="column" />
    <PostYears />
  </Fragment>
  <PostYears slot="drawer-top" />
</SarkaraLayout>
