---
import type { GetStaticPathsOptions, InferGetStaticPropsType } from "astro";
/* eslint-disable-next-line import/no-unresolved */
import { getCollection } from "astro:content";
/* eslint-disable-next-line import/no-unresolved */
import { ClientRouter } from "astro:transitions";
import {
  SarkaraLayout,
  ArticleList,
  Pagination,
} from "@cieloazul310/astro-sarkara";
import Analytics from "@/components/analytics.astro";
import ListItem from "@/components/microcms/list-item.astro";
import MicrocmsCategories from "@/components/microcms/microcms-categories.astro";
import Ad from "@/components/ad.astro";
import { menu, siteMetadata, pageSize } from "@/data";
// import { getBlogs } from "@/utils";

import "@/index.css";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const microCMSPost = await getCollection("microCMSPost");
  // Return a paginated collection of paths for all post
  return paginate(microCMSPost, { pageSize });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props;
---

<SarkaraLayout menu={menu} siteMetadata={siteMetadata} title="microCMS Posts">
  <Analytics slot="top-of-head" />
  <ClientRouter slot="bottom-of-head" />
  <Fragment slot="jumbotron-footer">
    {page.currentPage !== 1 && `(${page.currentPage}/${page.lastPage})`}
  </Fragment>
  <ArticleList>
    {page.data.map((post) => <ListItem post={post} />)}
    <Ad variant="infeed" />
  </ArticleList>
  <Pagination page={page} basePath="/microcms" />
  <MicrocmsCategories slot="sidebar-top" />
  <Ad variant="display-2" slot="sidebar-bottom" disableMargin />
  <MicrocmsCategories slot="drawer-top" />
</SarkaraLayout>
