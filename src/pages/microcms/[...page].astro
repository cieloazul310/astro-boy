---
import type { GetStaticPathsOptions, Page } from "astro";
import Layout from "../../layout/index.astro";
import ArticleList from "../../components/ArticleList.astro";
import ArticleListItem from "../../components/ArticleListItem.astro";
import MicrocmsCategories from "../../components/microcms/MicrocmsCategories.astro";
import Pagination from "../../components/Pagination.astro";
import { pageSize } from "../../data";
import { getBlogs, parseDate, slugify } from "../../utils";
import type { MicrocmsBlogs } from "../../types";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allBlogs = await getBlogs({ fields: ["id", "title", "publishedAt"] });
  const blogs = allBlogs.contents.sort(
    (a, b) =>
      new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime(),
  );
  // Return a paginated collection of paths for all posts
  return paginate(blogs, { pageSize });
}

interface Props {
  page: Page<Pick<MicrocmsBlogs, "id" | "title" | "publishedAt">>;
}

const { page } = Astro.props;
---

<Layout title="microCMS Posts">
  <ArticleList>
    {
      page.data
        .sort(
          (a, b) =>
            new Date(b.publishedAt).getTime() -
            new Date(a.publishedAt).getTime(),
        )
        .map((blog) => (
          <ArticleListItem
            href={slugify("microcms", blog)}
            primaryText={blog.title}
            secondaryText={parseDate(blog.publishedAt)}
          />
        ))
    }
  </ArticleList>
  <Pagination page={page} basePath="/microcms" />
  <MicrocmsCategories slot="sidebar-top" />
  <MicrocmsCategories slot="drawer-top" />
</Layout>
