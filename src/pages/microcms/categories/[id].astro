---
import type { InferGetStaticPropsType } from "astro";
/* eslint-disable-next-line import/no-unresolved */
import { ClientRouter } from "astro:transitions";
import {
  SarkaraLayout,
  Paper,
  PaperLink,
  ArticleList,
  Navigation,
  useNavigation,
} from "@cieloazul310/astro-sarkara";
import Analytics from "@/components/analytics.astro";
import ListItem from "@/components/microcms/list-item.astro";
import MicrocmsCategories from "@/components/microcms/microcms-categories.astro";
import Ad from "@/components/ad.astro";
import { getBlogs, getCategories } from "@/utils";
import { menu, siteMetadata } from "@/data";
import type { MicrocmsBlogsCategory } from "@/types";

import "@/index.css";

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const categories = await getCategories({ fields: ["id", "name"] });
  const blogs = await getBlogs({
    fields: ["id", "title", "publishedAt", "category", "eyecatch"],
  });

  return categories.contents.map(({ id, name }, index) => {
    const previous = index !== 0 ? categories.contents[index - 1] : null;
    const next =
      index !== categories.contents.length - 1
        ? categories.contents[index + 1]
        : null;

    return {
      params: {
        id,
      },
      props: {
        id,
        name,
        post: blogs.contents.filter(({ category }) => category?.id === id),
        previous,
        next,
      },
    };
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { name, post, previous, next } = Astro.props;
const navigation = useNavigation<Pick<MicrocmsBlogsCategory, "id" | "name">>(
  { left: previous, right: next },
  {
    href: (obj) => `/microcms/categories/${encodeURIComponent(obj.id)}`,
    primaryText: (obj) => obj.name,
  },
);
---

<SarkaraLayout menu={menu} siteMetadata={siteMetadata} title={name}>
  <Analytics slot="top-of-head" />
  <ClientRouter slot="bottom-of-head" />
  {
    post.length ? (
      <ArticleList>
        {post
          .sort(
            (a, b) =>
              new Date(b.publishedAt).getTime() -
              new Date(a.publishedAt).getTime(),
          )
          .map((blog) => (
            <ListItem blog={blog} />
          ))}
        <Ad variant="infeed" />
      </ArticleList>
    ) : (
      <Paper>
        <p>このカテゴリーは記事がありません。</p>
      </Paper>
    )
  }
  <Navigation {...navigation} />
  <PaperLink href="/microcms/">CMS Posts Top</PaperLink>
  <MicrocmsCategories slot="sidebar-top" />
  <Ad variant="display-2" slot="sidebar-bottom" disableMargin />
  <MicrocmsCategories slot="drawer-top" />
</SarkaraLayout>
