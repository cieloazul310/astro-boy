---
import type { InferGetStaticPropsType, GetStaticPathsItem } from "astro";
/* eslint-disable-next-line import/no-unresolved */
import { getCollection, type CollectionEntry } from "astro:content";
/* eslint-disable-next-line import/no-unresolved */
import { ClientRouter } from "astro:transitions";
import {
  SarkaraLayout,
  Paper,
  PaperLink,
  ArticleList,
  Navigation,
  useNavigation,
} from "@cieloazul310/astro-sarkara";
import Analytics from "@/components/analytics.astro";
import ListItem from "@/components/microcms/list-item.astro";
import MicrocmsCategories from "@/components/microcms/microcms-categories.astro";
import Ad from "@/components/ad.astro";
import { menu, siteMetadata } from "@/data";

import "@/index.css";

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const categories = await getCollection("microCMSCategories");
  const blogs = await getCollection("microCMSPost");

  return categories.map(({ id, ...props }, index) => {
    const previous = index !== 0 ? categories[index - 1] : null;
    const next = index !== categories.length - 1 ? categories[index + 1] : null;

    return {
      params: {
        id,
      },
      props: {
        id,
        name: props.data.name,
        posts: blogs.filter(({ data }) => data.category?.id === id),
        previous,
        next,
      },
    } satisfies GetStaticPathsItem;
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { name, posts, previous, next } = Astro.props;
const navigation = useNavigation<CollectionEntry<"microCMSCategories">>(
  { left: previous, right: next },
  {
    href: (obj) => `/microcms/categories/${encodeURIComponent(obj.id)}`,
    primaryText: (obj) => obj.data.name,
  },
);
---

<SarkaraLayout menu={menu} siteMetadata={siteMetadata} title={name}>
  <Analytics slot="top-of-head" />
  <ClientRouter slot="bottom-of-head" />
  {
    posts.length ? (
      <ArticleList>
        {posts
          .sort(
            (a, b) =>
              new Date(b.data.publishedAt).getTime() -
              new Date(a.data.publishedAt).getTime(),
          )
          .map((post) => (
            <ListItem post={post} />
          ))}
        <Ad variant="infeed" />
      </ArticleList>
    ) : (
      <Paper>
        <p>このカテゴリーは記事がありません。</p>
      </Paper>
    )
  }
  <Navigation {...navigation} />
  <PaperLink href="/microcms/">CMS Posts Top</PaperLink>
  <MicrocmsCategories slot="sidebar-top" />
  <Ad variant="display-2" slot="sidebar-bottom" disableMargin />
  <MicrocmsCategories slot="drawer-top" />
</SarkaraLayout>
