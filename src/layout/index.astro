---
import Seo, { type Props as SeoProps } from "./Seo.astro";
import Header from "./Header.astro";
import Drawer from "./Drawer/index.astro";
import Footer from "./Footer.astro";
import Jumbotron from "./Jumbotron.astro";
import Fab from "./Fab.astro";
import Menu from "./Menu.astro";
import PaperLink from "../components/PaperLink.astro";
import Divider from "../components/Divider.astro";
import { container, vstack } from "../../styled-system/patterns";
import { css } from "../../styled-system/css";

export interface Props extends Omit<SeoProps, "siteTitle"> {
  title?: string;
  description?: string;
}

const {
  title,
  description,
  image,
  siteType = "website",
  twitterCardType = "summary",
} = Astro.props;
const siteTitle = "Astro Boy";
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <Seo
      title={title}
      siteTitle={siteTitle}
      description={description}
      image={image}
      siteType={siteType}
      twitterCardType={twitterCardType}
    >
      <slot name="meta" />
    </Seo>
  </head>
  <body>
    <Header siteTitle={siteTitle} />
    <main>
      <article>
        <Jumbotron title={title || siteTitle} description={description} />
        <div
          class={container({
            maxWidth: "contentMaxWidth",
            display: "flex",
            px: 2,
            py: 4,
          })}
        >
          <div
            class={vstack({
              flexGrow: 1,
              gap: 4,
              px: [0, 2],
              alignItems: "stretch",
              maxWidth: "100%",
              minWidth: 0,
            })}
          >
            <slot />
            <div class={css({ hideFrom: "md" })}>
              <Menu />
            </div>
            <PaperLink className={css({ hideBelow: "md" })} href="/">
              Top
            </PaperLink>
          </div>
          <div
            class={vstack({
              width: "sidebarWidth",
              gap: 4,
              hideBelow: "md",
              flexShrink: 0,
              px: 2,
              pb: 8,
              alignItems: "stretch",
            })}
          >
            <slot name="sidebar-top" />
            {Astro.slots.has("sidebar-top") && <Divider />}
            <Menu />
            {Astro.slots.has("sidebar-bottom") && <Divider />}
            <slot name="sidebar-bottom" />
          </div>
        </div>
      </article>
    </main>
    <Footer siteTitle={siteTitle} />
    <Fab />
    <Drawer siteTitle={siteTitle}>
      <slot name="drawer-top" slot="drawer-top" />
      <Menu />
      <slot name="drawer-bottom" slot="drawer-bottom" />
    </Drawer>
    <script>
      import "../scripts/toggleColorMode.ts";
    </script>
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage === "undefined") return "light";

        const localStorageItem = localStorage.getItem("astro-color-mode");
        if (
          localStorageItem &&
          (localStorageItem === "light" || localStorageItem === "dark")
        ) {
          return localStorageItem;
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      document.documentElement?.setAttribute("data-color-mode", theme);

      window.localStorage.setItem("astro-color-mode", theme);
    </script>
  </body>
</html>
